{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","todo","end","className","SearchPannel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","ItemStatusFilter","buttons","name","label","map","filter","onFilterChange","clazz","key","onClick","ListItem","onDeleted","onToggleDone","onToggleImportant","classNames","done","important","aria-hidden","ToDoList","todos","items","item","id","AddItem","onLabelChange","onSubmit","preventDefault","addItem","localStorage","setItem","App","keyId","toDoData","createToDoItem","deleteItem","indx","findIndex","el","slice","text","newItem","toggleProperty","arr","propName","oldItem","length","toLowerCase","indexOf","doneItemsCount","toDoItemsCount","visibleItems","search","ReactDOM","render","document","getElementById","window","addEventListener","event","alert","data"],"mappings":"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","file":"static/js/main.2a7ed4e9.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({todo, end}) => {\r\n    return <div className='app-header d-flex'>\r\n              <h1>My ToDo list</h1>\r\n              <h2>{todo} to do, {end} finished</h2>\r\n           </div>\r\n}\r\n\r\nexport default AppHeader;","import SearchPannel from \"./search-panel\";\r\n\r\nexport default SearchPannel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n}\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    }\r\n    render() {\r\n        return <input type='text'\r\n                      className='form-control search-input'\r\n                      placeholder='search'\r\n                      value={this.state.term}\r\n                      onChange={this.onSearchChange}  />\r\n    }\r\n}","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label:'All'},\r\n        {name: 'active', label:'Active'},\r\n        {name: 'done', label:'Done'}\r\n    ]\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const { filter, onFilterChange } = this.props;\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-primary' : 'btn-outline-secondary'\r\n            return(\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)}>{label}</button>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport './todo-list-item.css';\r\n\r\nconst ListItem = ({ value, onDeleted, onToggleDone, onToggleImportant, done, important }) => {\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (<span className={classNames}>\r\n                <span className='todo-list-item-label'\r\n                      onClick={ onToggleDone }>\r\n                      {value}\r\n                </span>\r\n                  <button type=\"button\"\r\n                          onClick={onToggleImportant}\r\n                          className=\"btn btn-outline-danger btn-sm float-right\">\r\n                    <i className=\"fa fa-flag\" aria-hidden=\"true\"/>\r\n                  </button>\r\n\r\n                  <button type=\"button\"\r\n                          className=\"btn btn-outline-dark btn-sm float-right\"\r\n                          onClick={onDeleted}>\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\r\n                  </button>\r\n            </span>);\r\n    }\r\n\r\n    export default ListItem;\r\n","import ToDoList from \"./todo-list\";\r\n\r\nexport default ToDoList;","import React from 'react';\r\nimport ListItem from \"../todo-list-item/todo-list-item\";\r\nimport './todo-list.css'\r\n\r\nconst ToDoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n    const items = todos.map((item) => {\r\n        const {id, ...items} = item;\r\n        return(<li className='list-group-item' key={id}>\r\n                    <ListItem {...items}\r\n                              onDeleted={() => onDeleted(id)}\r\n                              onToggleDone={() => onToggleDone(id)}\r\n                              onToggleImportant={() => onToggleImportant(id)}/>\r\n               </li>)\r\n    })\r\n    return(\r\n        <ul className='list-group todo-list'>\r\n            {items}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import AddItem from \"./add-item\";\r\n\r\nexport default AddItem;","import React, {Component} from \"react\";\r\n\r\nimport './add-item.css'\r\n\r\nexport default class AddItem extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addItem(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n        localStorage.setItem('last-item', this.state.label)\r\n    }\r\n    render() {\r\n        return <form className='add-item-form d-flex'\r\n                        onSubmit={this.onSubmit}>\r\n                    <input className='form-control'\r\n                           type='text'\r\n                           placeholder='What to do'\r\n                            onChange={this.onLabelChange}\r\n                            value={this.state.label}/>\r\n                    <button className='btn btn-dark'>\r\n                        Add\r\n                    </button>\r\n                </form>\r\n    }\r\n}\r\n","import App from \"./app\";\r\n\r\nexport default App;","import AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport ToDoList from \"../todo-list\";\r\nimport React, {Component} from \"react\";\r\nimport './app.css'\r\nimport AddItem from \"../add-item\";\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n    keyId = 100;\r\n    state = {\r\n        toDoData: [\r\n            this.createToDoItem('Drink tea'),\r\n            this.createToDoItem('Learn React!'),\r\n            this.createToDoItem('Build awesome React Apps')\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    }\r\n\r\n    createToDoItem (value) {\r\n        return {\r\n            id: this.keyId++,\r\n            value,\r\n            important: false,\r\n            done: false\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState((state) => {\r\n            const indx = state.toDoData.findIndex((el) => el.id === id);\r\n            const newArr = [\r\n                ...state.toDoData.slice(0, indx),\r\n                ...state.toDoData.slice(indx +1)\r\n            ];\r\n            return {\r\n                toDoData: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n        let newItem = this.createToDoItem(text);\r\n        this.setState((state) => {\r\n            let newData = [...this.state.toDoData, newItem]\r\n            return {\r\n                toDoData: newData\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleProperty (arr, id, propName) {\r\n        const indx = arr.findIndex((el) => el.id === id);\r\n        const oldItem = arr[indx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n        return [\r\n            ...arr.slice(0, indx),\r\n            newItem,\r\n            ...arr.slice(indx +1)\r\n        ];\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({toDoData}) => {\r\n            return {\r\n                toDoData: this.toggleProperty(toDoData, id, 'important')\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({toDoData}) => {\r\n            return {\r\n                toDoData: this.toggleProperty(toDoData, id, 'done')\r\n            }\r\n        })\r\n    }\r\n\r\n    search (items, term) {\r\n        if(term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.value.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n\r\n    filter (items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return this.state.toDoData.filter((e) => !e.done);\r\n            case 'done':\r\n                return this.state.toDoData.filter((e) => e.done);\r\n            default:\r\n                return  items;\r\n        }\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term})\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const {toDoData, term, filter} = this.state;\r\n        const doneItemsCount = toDoData.filter((e) => e.done).length;\r\n        const toDoItemsCount = toDoData.length - doneItemsCount;\r\n        const visibleItems = this.filter(this.search(toDoData, term), filter);\r\n        return (<div className='todo-app'>\r\n                <AppHeader todo={toDoItemsCount} end={doneItemsCount}/>\r\n                <div className='top-panel d-flex'>\r\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange}/>\r\n                </div>\r\n                <ToDoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}/>\r\n                          <AddItem addItem={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nwindow.addEventListener('message', function(event) {\r\n    alert(event.data)\r\n  });"],"sourceRoot":""}